Exercício 01
Escreva um programa que leia 10 números. Para cada número lido, verifique e codifique de
acordo com as regras a seguir:
- Se um número for par, empilhe na pilha;
- Se o número for ímpar, desempilhe um número da pilha. Caso a pilha esteja vazia, mostre 
a mensagem
- Se ao final do programa a pilha não estiver vazia, desempilhe todos os elementos,
imprimindo-os na tela.

Exercício 02
Escreva um programa que leia 10 números. Para cada número lido, verifique e codifique de
acordo com as regras a seguir:
- Se o número for par, empilhe na pilha chamada par;
- Se o número for ímpar, empilhe na pilha chamada ímpar;
- Seo número for zero, desempilhe um elemento de cada pilha. Caso alguma pilha esteja vazia, mostre
uma mensagem de erro na tela.
Ao final do programa desempilhe todos os elementos das duas pilhas, imprimindo-os na tela

Exercício 03
Utilize a classe Pilha (criada durante as aulas) e desenvolva os seguintes items:
- Crie uma pilha com capacidade para 20 livros;
- Insira 6 livros na pilha. Cada livro contém nome, isbn (número único do livro no mundo), ano de 
lançamento e autor.
- Crie um exemplo para utilizar cada método da classe Pilha.

Execício 04
Refazer o mesmo do exercício 3, mas usando a classe da API Java - Stack

Exercicio 05
Escreva um programa que testa se uma sequência de caracteres fornecida pelo usuário pe um palíndromo, ou
seja, é uma palavra cuja primeira metade é simétrica à segunda metade. Veja alguns exemplos:
- AABCCBAA - sim
- ABFFBB - não

Exercicio 06
Escreva um programa para verificar se uma expressão matemática tem os parênteses agrupados de forma
correta, isto é:
(1) se o número de parênteses à esquerda e à direita são iguais e;
(2) se todo parêntese aberto é seguido posteriormente por um fechamento de parêntese

Ex.: 
-> )A+B(-C ou (A+B))-(C+D  | viola a condição 2
-> ((A+B)+D) | está correta

Exercicio 07
Usando a classe Pilha ou Stack, desenvolva um algoritmo que faça a conversão de números decimais para
binário.

Exercicio 08
Usando a classe Pilha ou Stack, desenvolva um algoritmo que resolva o quebra cabeça Torre de Hanoi.